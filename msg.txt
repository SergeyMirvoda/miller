1. Будем писать всё по-русски (при желании и наличии свободного времени можно добавить i18n https://www.playframework.com/documentation/1.1.1/i18n)
2. Модель сообщения об ошибке (ErrorReportModel) - будет крайне простой, задача просто сохранить в таблицу БД, переданные данные
3. БД создаётся автоматом при первом запуске Play не находит БД(если БД есть (errors.db) нужно её удлить или перименовать ) и просит её создать
4. Ошибки должны группироваться - если допустим в цикле юудет генерироваться одна и та же ошибка или 1_000 пользователей зайдут на сайт и отправят нам ошибку, нам нужно видеть 1! ошибку, сработвашую 1_000 раз, а не 1000 ошибок(см. столбец Число срабатываний)
5. Кнопка [Сгенерировать тестовое ...] реализована в  основном предславении в JS функции throwSampleError, которая шлёт тестовую ошибку на /api/log через jquery
5.1 JSON попадет в метод Application.Log и там преобразовывается в Модель, затем сохраняется в БД


Задачи
1. Заголовок таблицы испавить согласно правилам русского языка, а то там сейчас (Показано 3 отчётов об ошибках) или переформулировать, чтобы не пришлось сколнять
2. Группировать сообщения по определнным правилам см. п.4, спмсок полей по которым группировать нужно придумать
3. Добавить недостающие св-ва в модель, см DOCS/sample_error_log.json, плодить таблицы не нужно. писать всё в одну таблицу
4. Написать клиентскую часть (JavaScript) для сбора и отправки ошибок (или украсть у Raygun.io https://github.com/MindscapeHQ/raygun4js/blob/master/src/raygun.js)
5. Убрать кнопку [5] или перенести её из main, а то она будет появляться на всех страницах
6. Сделать регистрацию пользователей, просто отдельную таблицу (login,имя,пароль)
6.0 Требовать при входе имя\пароль и фильтровать список ошибок по полученному ключу
6.1 Каждому пользовтаелю выдавать Ключ (UUID) - он его должен будет передавать при отправке сообщений (в примере передаётся всегда одинаковый, для теста)